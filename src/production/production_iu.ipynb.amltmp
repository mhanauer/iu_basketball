{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "%load_ext lab_black"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "The lab_black extension is already loaded. To reload it, use:\n  %reload_ext lab_black\n"
        }
      ],
      "execution_count": 13,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "\n",
        "from dotenv import load_dotenv\n",
        "\n",
        "# Load the environment variables from the .env file\n",
        "load_dotenv()\n",
        "\n",
        "# Get the value of an environment variable\n",
        "git_password = os.getenv(\"git_password\")\n",
        "\n",
        "# Print the value of the environment variable\n",
        "print(git_password)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "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\n"
        }
      ],
      "execution_count": 18,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1681159346487
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from mlxtend.regressor import StackingCVRegressor\n",
        "from skopt import BayesSearchCV\n",
        "from sklearn.model_selection import RepeatedKFold\n",
        "import xgboost as xgb\n",
        "import lightgbm as lgb\n",
        "from sklearn.ensemble import HistGradientBoostingRegressor\n",
        "\n",
        "from sklearn.metrics import r2_score\n",
        "from sklearn.metrics import median_absolute_error\n",
        "import pandas as pd\n",
        "import os\n",
        "from pyprojroot import here\n",
        "import numpy as np\n",
        "from skimpy import clean_columns\n",
        "from data_cleaning.fun_hot_encode_limit import fun_hot_encode_limit\n",
        "from pmdarima.model_selection import train_test_split\n",
        "import optuna\n",
        "import pandas as pd\n",
        "import xgboost as xgb\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import r2_score\n",
        "import joblib\n",
        "from sklearn.model_selection import TimeSeriesSplit, cross_val_score\n",
        "import joblib\n",
        "\n",
        "path_data = here(\"./data\")\n",
        "os.chdir(path_data)\n",
        "data_iu_analysis = pd.read_parquet(\"data_iu_analysis.parquet\")\n",
        "data_iu_analysis = data_iu_analysis.drop(columns=\"season\")\n",
        "\n",
        "path_outputs = here(\"./outputs\")\n",
        "os.chdir(path_outputs)\n",
        "\n",
        "model_iu_bball = joblib.load(\"model_iu_bball.jlib\")"
      ],
      "outputs": [],
      "execution_count": 19,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1681159366670
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_iu_analysis"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 20,
          "data": {
            "text/plain": "     w   l  w_l_%  w_c  l_c  w_l_%_c    srs    sos  ps_g  pa_g  ap_pre  \\\n0   23  12  0.657   12    8    0.600  14.96   8.90  74.7  68.7    13.0   \n1   21  14  0.600    9   11    0.450  12.71   8.08  70.8  66.2     NaN   \n2   12  15  0.444    7   12    0.368  12.79  12.45  69.7  69.4     NaN   \n3   20  12  0.625    9   11    0.450  15.07  10.35  71.4  66.7     NaN   \n4   19  16  0.543    8   12    0.400  13.82  10.10  71.5  67.8     NaN   \n..  ..  ..    ...  ...  ...      ...    ...    ...   ...   ...     ...   \n69  20   4  0.833   12    2    0.857  17.47   9.13  75.5  67.2     NaN   \n70  23   3  0.885   17    1    0.944  19.98   8.29  81.2  69.5     NaN   \n71  16   6  0.727    9    5    0.643  12.16   5.29  73.7  66.8     NaN   \n72  19   3  0.864   12    2    0.857  16.94   5.85  64.5  53.3     NaN   \n73  17   5  0.773    7    5    0.583  12.00   5.00  64.5  56.5     NaN   \n\n    ap_high  ap_final  seed  tournament_make  \n0      10.0      21.0   4.0                1  \n1       NaN       NaN  12.0                1  \n2       NaN       NaN   NaN                0  \n3       NaN       NaN   NaN                0  \n4      21.0       NaN   NaN                0  \n..      ...       ...   ...              ...  \n69      1.0       4.0   NaN                1  \n70      1.0       1.0   NaN                1  \n71      4.0       NaN   NaN                0  \n72      3.0       7.0   NaN                0  \n73      4.0      20.0   NaN                0  \n\n[74 rows x 15 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>w</th>\n      <th>l</th>\n      <th>w_l_%</th>\n      <th>w_c</th>\n      <th>l_c</th>\n      <th>w_l_%_c</th>\n      <th>srs</th>\n      <th>sos</th>\n      <th>ps_g</th>\n      <th>pa_g</th>\n      <th>ap_pre</th>\n      <th>ap_high</th>\n      <th>ap_final</th>\n      <th>seed</th>\n      <th>tournament_make</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>23</td>\n      <td>12</td>\n      <td>0.657</td>\n      <td>12</td>\n      <td>8</td>\n      <td>0.600</td>\n      <td>14.96</td>\n      <td>8.90</td>\n      <td>74.7</td>\n      <td>68.7</td>\n      <td>13.0</td>\n      <td>10.0</td>\n      <td>21.0</td>\n      <td>4.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>14</td>\n      <td>0.600</td>\n      <td>9</td>\n      <td>11</td>\n      <td>0.450</td>\n      <td>12.71</td>\n      <td>8.08</td>\n      <td>70.8</td>\n      <td>66.2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>12.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>12</td>\n      <td>15</td>\n      <td>0.444</td>\n      <td>7</td>\n      <td>12</td>\n      <td>0.368</td>\n      <td>12.79</td>\n      <td>12.45</td>\n      <td>69.7</td>\n      <td>69.4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>20</td>\n      <td>12</td>\n      <td>0.625</td>\n      <td>9</td>\n      <td>11</td>\n      <td>0.450</td>\n      <td>15.07</td>\n      <td>10.35</td>\n      <td>71.4</td>\n      <td>66.7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>19</td>\n      <td>16</td>\n      <td>0.543</td>\n      <td>8</td>\n      <td>12</td>\n      <td>0.400</td>\n      <td>13.82</td>\n      <td>10.10</td>\n      <td>71.5</td>\n      <td>67.8</td>\n      <td>NaN</td>\n      <td>21.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>20</td>\n      <td>4</td>\n      <td>0.833</td>\n      <td>12</td>\n      <td>2</td>\n      <td>0.857</td>\n      <td>17.47</td>\n      <td>9.13</td>\n      <td>75.5</td>\n      <td>67.2</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>23</td>\n      <td>3</td>\n      <td>0.885</td>\n      <td>17</td>\n      <td>1</td>\n      <td>0.944</td>\n      <td>19.98</td>\n      <td>8.29</td>\n      <td>81.2</td>\n      <td>69.5</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>16</td>\n      <td>6</td>\n      <td>0.727</td>\n      <td>9</td>\n      <td>5</td>\n      <td>0.643</td>\n      <td>12.16</td>\n      <td>5.29</td>\n      <td>73.7</td>\n      <td>66.8</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>19</td>\n      <td>3</td>\n      <td>0.864</td>\n      <td>12</td>\n      <td>2</td>\n      <td>0.857</td>\n      <td>16.94</td>\n      <td>5.85</td>\n      <td>64.5</td>\n      <td>53.3</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>7.0</td>\n      <td>NaN</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>17</td>\n      <td>5</td>\n      <td>0.773</td>\n      <td>7</td>\n      <td>5</td>\n      <td>0.583</td>\n      <td>12.00</td>\n      <td>5.00</td>\n      <td>64.5</td>\n      <td>56.5</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>20.0</td>\n      <td>NaN</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>74 rows Ã— 15 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 20,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1681159371144
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model_iu_bball"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 4,
          "data": {
            "text/plain": "XGBRegressor(alpha=1.0327371397889676e-05, base_score=0.5, booster='gbtree',\n             colsample_bylevel=1, colsample_bynode=1, colsample_bytree=0.55,\n             eta=0.9978588111172516, gamma=1.0984894816422595e-07, gpu_id=-1,\n             importance_type='gain', interaction_constraints='',\n             lambda=1.963663031958699e-08, learning_rate=0.997858822,\n             max_delta_step=0, max_depth=3, min_child_weight=1, missing=nan,\n             monotone_constraints='()', n_estimators=100, n_jobs=2,\n             num_parallel_tree=1, random_state=0, reg_alpha=1.03273715e-05,\n             reg_lambda=1.96366319e-08, scale_pos_weight=1, subsample=0.75,\n             tree_method='exact', validate_parameters=1, verbosity=None)",
            "text/html": "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(alpha=1.0327371397889676e-05, base_score=0.5, booster=&#x27;gbtree&#x27;,\n             colsample_bylevel=1, colsample_bynode=1, colsample_bytree=0.55,\n             eta=0.9978588111172516, gamma=1.0984894816422595e-07, gpu_id=-1,\n             importance_type=&#x27;gain&#x27;, interaction_constraints=&#x27;&#x27;,\n             lambda=1.963663031958699e-08, learning_rate=0.997858822,\n             max_delta_step=0, max_depth=3, min_child_weight=1, missing=nan,\n             monotone_constraints=&#x27;()&#x27;, n_estimators=100, n_jobs=2,\n             num_parallel_tree=1, random_state=0, reg_alpha=1.03273715e-05,\n             reg_lambda=1.96366319e-08, scale_pos_weight=1, subsample=0.75,\n             tree_method=&#x27;exact&#x27;, validate_parameters=1, verbosity=None)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBRegressor</label><div class=\"sk-toggleable__content\"><pre>XGBRegressor(alpha=1.0327371397889676e-05, base_score=0.5, booster=&#x27;gbtree&#x27;,\n             colsample_bylevel=1, colsample_bynode=1, colsample_bytree=0.55,\n             eta=0.9978588111172516, gamma=1.0984894816422595e-07, gpu_id=-1,\n             importance_type=&#x27;gain&#x27;, interaction_constraints=&#x27;&#x27;,\n             lambda=1.963663031958699e-08, learning_rate=0.997858822,\n             max_delta_step=0, max_depth=3, min_child_weight=1, missing=nan,\n             monotone_constraints=&#x27;()&#x27;, n_estimators=100, n_jobs=2,\n             num_parallel_tree=1, random_state=0, reg_alpha=1.03273715e-05,\n             reg_lambda=1.96366319e-08, scale_pos_weight=1, subsample=0.75,\n             tree_method=&#x27;exact&#x27;, validate_parameters=1, verbosity=None)</pre></div></div></div></div></div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 4,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1681158094645
        }
      }
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python38-azureml",
      "language": "python",
      "display_name": "Python 3.8 - AzureML"
    },
    "language_info": {
      "name": "python",
      "version": "3.8.10",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "microsoft": {
      "ms_spell_check": {
        "ms_spell_check_language": "en"
      },
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    },
    "kernel_info": {
      "name": "python38-azureml"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}